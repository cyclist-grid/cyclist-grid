body {
	font-size: $font-size;
	line-height: $line-height;
}

@mixin header($values) {
	$numerator: nth($values, 1);
	$denumerator: nth($values, 2);
	$ratio: make-ratio($numerator, $denumerator);

	font-size: em-calc($ratio);
	margin-bottom: em-translate-calc($leading-ratio, $ratio); // This returns a calc that equals the line height from this headers font size

	$line-height-multiplier: ceil($numerator / $denumerator);

	line-height: em-translate-multiplier-calc($leading-ratio, $ratio, $line-height-multiplier);

//	line-height: em-calc($leading-ratio);

	// Just calculate a line height multiplier

//	font-size: 1em * $ratio;

//	$margin: $leading / $ratio; // This is a margin the size of the leading
//	$remainder: ceil($ratio) - $ratio; // But if there is a remainder we have to adjust for the missing portion in relation to the baseline
//	@if $remainder > 0 {
//		$margin: $margin * $remainder;
//	}
//
//	// Sub-pixel rendering correction
//	// Add & subtract .0001 to prevent values that have a decimal of exactly .5 from adding 1px to both
//	// line-height and margin-bottom.
//	line-height: roundEms($ratio, $leading + .0001);
//	margin-bottom: roundEms($ratio, $margin - .0001);
}

@function roundEms($ratio, $value) {
	// Rounding function to correct for sub-pixel rendering
	// WebKit rounds all values down, e.g., 4.6px will use 4px
	// This messes up the baseline grid, because baseline calculations will add a line-height and
	// margin to calculate the grid totals, e.g., the baseline grid will expect
	// 4.25px + 29.75px to equal 34px, but WebKit will round the 29.75px down to 29px
	// This method is used to correct values for headers, if WebKit ever supports
	// sub-pixel rendering without rounding this method can be removed.
	$calculated: $ratio * ($font-size / 1em) * ($value / 1em) * ($browser-default-font-size / 1px);
	$rounded: round($calculated);	
	$new: $rounded / $ratio / ($font-size / 1em) / ($browser-default-font-size / 1px) * 1em;
	@return $new;
}

//$double-great-primer-ratio: make-ratio(36, 12);
//$double-pica-ratio: make-ratio(24, 12);
//$double-small-pica-ratio: make-ratio(21, 12);
//$great-primer-ratio: make-ratio(18, 12);
//$english-ratio: make-ratio(14, 12);
//$pica-ratio: make-ratio(12, 12);
$double-great-primer: 36, 12;
$double-pica: 24, 12;
$double-small-pica: 21, 12;
$great-primer: 18, 12;
$english: 14, 12;
$pica: 12, 12;

h1 {
	@include header($double-great-primer);
}
h2 {
  	@include header($double-pica);
}
h3 {
	@include header($double-small-pica);
}
h4 {
	@include header($great-primer);
}
h5 {
	@include header($english);
}
h6 {
	@include header($pica);
}
p, ul, ol {
  	margin-bottom: em-calc($leading-ratio);
}
ul {
	list-style-type: disc;
	margin-left: $indent;
}
ol {
	list-style-type: decimal;
	margin-left: $indent;
}